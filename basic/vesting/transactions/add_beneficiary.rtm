# Withdrawing the admin badge from the admin account. When we call the `create_proof` methods on the account component
# the returned proof is automatically put in our auth zone so we do not need to manually manage it.
CALL_METHOD 
    ComponentAddress("023989070e21339d5e29c5294ea45e962b9817599a9befa0b1691d") 
    "create_proof" 
    ResourceAddress("03dadb7890ad5927a5cbe870dc4974f6b7cb43d962e47bcf17115f");

# Withdrawing the tokens which we would like to be vested for the beneficiary. In this case, we would like to vest 
# 1,000,000 USDT tokens for the beneficiary over a period of 100 epochs with a 20 epoch cliff. 
CALL_METHOD 
    ComponentAddress("023989070e21339d5e29c5294ea45e962b9817599a9befa0b1691d") 
    "withdraw_by_amount" 
    Decimal("1000000") 
    ResourceAddress("03b9dbf2e253dd958e646ae58296fbf72d02f0701f2ec282945317");
TAKE_FROM_WORKTOP 
    ResourceAddress("03b9dbf2e253dd958e646ae58296fbf72d02f0701f2ec282945317") 
    Bucket("usdt_tokens");

# Adding the beneficiary to the vesting component
CALL_METHOD 
    ComponentAddress("02ec7c405825ff53f7eee2592b9d7b44462ad9ac0935a31c8edad3") 
    "add_beneficiary" 
    Bucket("usdt_tokens") 20u64 100u64 Decimal("0.2");

# The above method call returns a a beneficiary badge. We now need to take that badge from the transaction worktop and 
# into a bucket to then send it to the beneficiary
TAKE_FROM_WORKTOP 
    ResourceAddress("035a183032a1d5a35bee1d71c7657dd5da1ff6aa817ca74bebdeea") 
    Bucket("beneficiary_badge");
CALL_METHOD 
    ComponentAddress("02322ade870afd26c843a8f1e699d9e5d71a763bbfb8b4f95255a3") 
    "deposit" 
    Bucket("beneficiary_badge");

# After the beneficiary's badge has been sent to their account, we deposit all remaining items in the transaction 
# worktop into the admin account
CALL_METHOD_WITH_ALL_RESOURCES 
    ComponentAddress("023989070e21339d5e29c5294ea45e962b9817599a9befa0b1691d") 
    "deposit_batch";